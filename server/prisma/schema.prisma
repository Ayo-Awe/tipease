// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  firstName String? @map("first_name")
  lastName String? @map("last_name")
  email String @unique
  clerkId String @unique @map("clerk_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  activatedAt DateTime? @map("activated_at")
  subaccount String?
  accountNumber String? @map("account_number")
  bankName String? @map("bank_name")
  accountName String? @map("account_name")
  bankCode String? @map("bank_code")
  paymentCurrencyId Int? @map("payment_currency_id")
  pricePerToken Int? @map("price_per_token") // defaults to that of the payment currency
  paymentCurrency Currency? @relation(fields: [paymentCurrencyId], references: [id])

  page Page?
  tips Tip[]

  @@map("users")
}

model Page {
  id Int @id @default(autoincrement())
  slug String @db.VarChar(100)
  isActive Boolean @default(false) @map("is_active")
  profileImage String? @map("profile_image")
  bannerImage String? @map("banner_image")
  qrImage String? @map("qr_image")
  websiteUrl String? @map("website_url")
  bio String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user User @relation(fields: [userId], references: [id])
  userId Int @unique @map("user_id")

  @@map("pages")
}

model Currency {
  id Int @id @default(autoincrement())
  name String
  code String @unique @db.Char(3)
  defaultTipAmount Int @map("default_tip_amount")
  allowedTipAmounts Int[] @map("allowed_tip_amounts")
  country String
  countryCode String @map("country_code")

  users User[]
  tips Tip[]

  @@map("currencies")
}

model Tip {
  id Int @id @default(autoincrement())
  message String @db.Text @default("")
  email String @db.VarChar(255)
  reference String @unique
  amount Int
  tokenCount Int
  currencyId Int
  currency Currency @relation(fields: [currencyId], references: [id])
  userId Int
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")


@@map("tips")
}

